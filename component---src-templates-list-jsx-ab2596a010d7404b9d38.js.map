{"version":3,"sources":["webpack:///./src/components/List/index.jsx","webpack:///./src/templates/List.jsx"],"names":["List_List","_ref","data","location","page","Object","getPage","a","allPosts","getPosts","postCount","fp","size","posts","slice","constants","CONTENT_PER_PAGE","react_default","createElement","react","Fragment","PostsWrapper","Helmet_default","name","content","map","post","node","path","frontmatter","get","images","tags","Card","assign","key","Pagination","propTypes","prop_types_default","shape","isRequired","components_List","g","d","t","h","default","props","layout","pageQuery"],"mappings":"yOAWMA,EAAO,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SACdC,EAAOC,OAAAC,EAAAC,EAAAF,CAAQ,EAARA,CAAWF,GAClBK,EAAWH,OAAAI,EAAAF,EAAAF,CAASH,GACpBQ,EAAYL,OAAAM,EAAAC,KAAAP,CAAKG,GACjBK,EAAQR,OAAAM,EAAAG,MAAAT,EACXD,EAAO,GAAKW,EAAAC,iBACbZ,EAAOW,EAAAC,iBAFKX,CAGZG,GAEF,OACES,EAAAV,EAAAW,cAACC,EAAAC,SAAD,KACEH,EAAAV,EAAAW,cAACG,EAAAd,EAAD,KACEU,EAAAV,EAAAW,cAACI,EAAAf,EAAD,KACEU,EAAAV,EAAAW,cAAA,oCAGAD,EAAAV,EAAAW,cAAA,QAAMK,KAAK,WAAWC,QAAQ,mBAE/BnB,OAAAM,EAAAc,IAAApB,CAAI,SAACqB,GACJ,GAAuB,UAAnBA,EAAKC,KAAKC,KAAkB,CAC9B,IAAMC,EAAcxB,OAAAM,EAAAmB,IAAAzB,CAAI,mBAAJA,CAAwBqB,GACpCK,EAAuBF,EAAvBE,OAAQC,EAAeH,EAAfG,KAAMJ,EAASC,EAATD,KAEtB,OACEX,EAAAV,EAAAW,cAACe,EAAA1B,EAADF,OAAA6B,QAAMC,IAAKP,EAAMA,KAAMA,EAAMG,OAAQA,EAAQC,KAAMA,GAAUH,IAIjE,OAAO,MAVRxB,CAWEQ,IAELI,EAAAV,EAAAW,cAACkB,EAAA7B,GAAWG,UAAWA,EAAWP,SAAUA,MAKlDH,EAAKqC,WACHnC,KAAMoC,EAAA/B,EAAUgC,UAAUC,WAC1BrC,SAAUmC,EAAA/B,EAAUgC,UAAUC,YAGhC,IAAAC,EAAAC,EAAAnC,EAAAoC,EAAAC,EAAA,8BAAAC,IAAAD,EAAAE,QC/CqB,SAAAC,GAAA,OACnB9B,EAAAV,EAAAW,cAAC8B,EAAAzC,EAAWwC,EACV9B,EAAAV,EAAAW,cAACuB,EAASM,KAFd,IAQaE","file":"component---src-templates-list-jsx-ab2596a010d7404b9d38.js","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { size, slice, map, get } from 'lodash/fp';\nimport PostsWrapper from '~/components/Common/PostsWrapper';\nimport Card from '~/components/Common/Card';\nimport Pagination from '~/components/Common/Pagination';\nimport getPosts from '~/utils/getPosts';\nimport getPage from '~/utils/getPage';\nimport { CONTENT_PER_PAGE } from '~/constants';\n\nconst List = ({ data, location }) => {\n  const page = getPage(2)(location);\n  const allPosts = getPosts(data);\n  const postCount = size(allPosts);\n  const posts = slice(\n    (page - 1) * CONTENT_PER_PAGE,\n    page * CONTENT_PER_PAGE\n  )(allPosts);\n\n  return (\n    <Fragment>\n      <PostsWrapper>\n        <Helmet>\n          <title>\n            Rahmi Pruitt | POST\n          </title>\n          <meta name=\"og:title\" content=\"WONISM | POST\" />\n        </Helmet>\n        {map((post) => {\n          if (post.node.path !== '/404/') {\n            const frontmatter = get('node.frontmatter')(post);\n            const { images, tags, path } = frontmatter;\n\n            return (\n              <Card key={path} path={path} images={images} tags={tags} {...frontmatter} />\n            );\n          }\n\n          return null;\n        })(posts)}\n      </PostsWrapper>\n      <Pagination postCount={postCount} location={location} />\n    </Fragment>\n  );\n};\n\nList.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default List;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '~/components/layout';\nimport List from '~/components/List';\n\nconst ListTemplate = props => (\n  <Layout {...props}>\n    <List {...props} />\n  </Layout>\n);\n\nexport default ListTemplate;\n\nexport const pageQuery = graphql`\n  query ListQuery {\n    allMarkdownRemark (\n      filter: { frontmatter: { hide: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            type\n            title\n            images\n            path\n            tags\n            date\n            summary\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}